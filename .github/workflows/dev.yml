name: Docker Build and Deploy to ECR

on:
  push:
     branches: [ dev ]

  

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: 746460560240.dkr.ecr.ap-south-1.amazonaws.com
        ECR_REPOSITORY: seller-portal-dev
        IMAGE_TAG: catalog-service-dev-latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: update kubeconfig
      run : aws eks update-kubeconfig --name sp-backdev --region ap-south-1
    - name: Deploy image to Amazon Eks
      run : |
        kubectl get pods --namespace sp-devbackend
        kubectl apply -f k8s-deploy/dev/documentdb-external-service.yml --namespace sp-catalog-dev --record
        kubectl apply -f k8s-deploy/dev/docdb-secrets.yml --namespace sp-catalog-dev --record
        kubectl apply -f k8s-deploy/dev/postgresdb-external-service.yml --namespace sp-catalog-dev --record
        kubectl apply -f k8s-deploy/dev/pgs-secrets.yml --namespace sp-catalog-dev --record
        kubectl apply -f k8s-deploy/dev/deployment.yml --namespace sp-catalog-dev --record
        kubectl apply -f k8s-deploy/dev/service.yml --namespace sp-catalog-dev --record
        kubectl apply -f k8s-deploy/dev/alb_ingress.yml --namespace sp-catalog-dev --record
        kubectl rollout restart -f k8s-deploy/dev/deployment.yml --namespace sp-catalog-dev
        kubectl get svc --namespace sp-catalog-dev
